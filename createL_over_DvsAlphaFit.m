function [fitresult, gof] = createL_over_DvsAlphaFit(alpha, L_over_D)
%CREATEFIT(ALPHA,L_OVER_D)
%  Create a fit.
%
%  Data for 'untitled fit 1' fit:
%      X Input: alpha
%      Y Output: L_over_D
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 09-Dec-2024 20:24:59


%% Fit: 'untitled fit 1'.
[xData, yData] = prepareCurveData(alpha, L_over_D);

% Set up fittype and options.
ft = fittype( 'smoothingspline' );
opts = fitoptions( 'Method', 'SmoothingSpline' );
opts.SmoothingParam = 0.999896350047154;

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );
d_fitted_curve = differentiate(fitresult, xData);  
% Find the index where the derivative is zero (or close to zero)
[~, idx_max] = min(abs(d_fitted_curve));

% The C_L value at the maximum
alpha_max = alpha(idx_max);

% The corresponding C_Dtot value at this C_L
L_over_D_max = fitresult(alpha_max);

% Output the results
disp(['Maximum C_Dtot occurs at C_L = ', num2str(alpha_max)]);
disp(['Maximum C_Dtot value is: ', num2str(L_over_D_max)]);

% Plot fit with data.
figure( 'Name', 'untitled fit 1' );
h = plot( fitresult, xData, yData );
legend( h, 'L_over_D vs. alpha', 'untitled fit 1', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'alpha', 'Interpreter', 'none' );
ylabel( 'L_over_D', 'Interpreter', 'none' );
grid on


